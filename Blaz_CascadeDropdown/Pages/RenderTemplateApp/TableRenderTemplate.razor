@typeparam TItem
@using System.Diagnostics.CodeAnalysis
@using System.Text.Json
@inject IJSRuntime JsRuntime

<table class="table">
    <thead>
        <tr>@TableHeader</tr>
    </thead>
    <tbody>
        @foreach (var item in Items)
        {
            if (RowTemplate is not null)
            {
                <tr @onclick="@(()=>OnRowClick(item))">@RowTemplate(item)</tr>
            }
        }
    </tbody>
</table>

@code {
    [Parameter]
    public RenderFragment? TableHeader { get; set; }

    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }

    [Parameter, AllowNull]
    public IReadOnlyList<TItem> Items { get; set; }

    [Parameter] 
    public EventCallback<object> OnRowSelected { get; set; }

    async Task OnRowClick(object item)
    {
        await JsRuntime.InvokeVoidAsync("alert", $"Warning! {JsonSerializer.Serialize(item)}");
        await OnRowSelected.InvokeAsync(item); 
    }
}